
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>Lapidix Dev</title>
      <link>https://garvin.netlify.app/blog</link>
      <description>Technical blog by ngw covering Cosmos blockchain development, modern web technologies, and software engineering best practices.</description>
      <language>ko</language>
      <managingEditor>ngwszsd@qq.com (ngw)</managingEditor>
      <webMaster>ngwszsd@qq.com (ngw)</webMaster>
      <lastBuildDate>Tue, 15 Jul 2025 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://garvin.netlify.app/tags/frontend/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://garvin.netlify.app/posts/fsd-ddd-clean-architecture</guid>
    <title>Frontend Clean Architecture (with FSD &amp; DDD)</title>
    <link>https://garvin.netlify.app/posts/fsd-ddd-clean-architecture</link>
    <description>Frontend에서 FSD(Feature Sliced Design)와 DDD(Domain-Driven Design)를 적용하여 Clean Architecture를 구현하기 위한 방법에 대해서 알아봅니다.</description>
    <pubDate>Tue, 15 Jul 2025 00:00:00 GMT</pubDate>
    <author>ngwszsd@qq.com (ngw)</author>
    <category>Clean Architecture</category><category>Frontend</category><category>FSD</category><category>DDD</category>
  </item>

  <item>
    <guid>https://garvin.netlify.app/posts/tailwindcss-and-emotion-internals</guid>
    <title>현대 CSS 전략의 두 가지 관점 (with Tailwindcss, Emotion)</title>
    <link>https://garvin.netlify.app/posts/tailwindcss-and-emotion-internals</link>
    <description>현대 CSS를 대표하는 두 패러다임, 정적 방식인 TailwindCSS와 동적 방식인 Emotion의 내부 구현을 비교 분석합니다. 소스코드 기반으로 각 접근법의 동작 원리와 기술적 트레이드오프를 알아봅니다.</description>
    <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
    <author>ngwszsd@qq.com (ngw)</author>
    <category>Frontend</category><category>Tailwindcss</category><category>Emotion</category><category>JIT</category><category>CSS-in-JS</category><category>CSS</category>
  </item>

  <item>
    <guid>https://garvin.netlify.app/posts/vercel-and-aws</guid>
    <title>Vercel과 AWS, 왜 나는 Vercel을 쓸까?</title>
    <link>https://garvin.netlify.app/posts/vercel-and-aws</link>
    <description> AWS와 Vercel의 정적 웹사이트 배포 방식을 비교해 각각의 특징과 차이를 쉽게 정리해봅니다.</description>
    <pubDate>Wed, 18 Jun 2025 00:00:00 GMT</pubDate>
    <author>ngwszsd@qq.com (ngw)</author>
    <category>Vercel</category><category>AWS</category><category>CloudFront</category><category>Frontend</category>
  </item>

    </channel>
  </rss>
